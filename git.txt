git init			--->initialize empty git repo
git --version		--->what version are you using
mkdir edurekha-repo	--->creates a new directory in your system
cd edurekha-repo	--->changes
git add *			--->add all files to staging area
git add .			--->add all files to staging area
touch edurekha.py	--->creates a .py file
gedit edurekha.py	--->opens up the file to edit
git add edurekha.py	--->adds edurekha.py file to staging area
git commit -m "msg"	--->records the changes made to the files in a local repo with an ID(commit msg)
git status 			--->current state of the repo
git config			--->configure user.name and user.email
git config --global user.name "name"
git config --global user.email "email"
git config user.name "name"
git config user.email "email"
git branch			--->checkout your current branch/create one
git merge			--->integrates branches together
git checkout		--->used for switching branches
ls					--->what are the files present in your dir/branch
git branch -d 		--->deletes a branch
git clone			--->clones the file from the github account
git stash			--->to save changes made when they're not in a state to commit them to a repo
git log				--->this helps to give context and history for a repo
git rebase			--->takes a set of commits, copies them and stores them outside your repo
git revert			--->it helps you to roll back to the previous version of the file
git fetch			--->for fetching the total branches in a repo
git remote add origin	--->to add to the github account
git push origin master	--->pushs code from local repo to remote repo
git pull origin master 	--->pulls the changes when made from github account
git push origin --delete AEM	--->deletes branch in remote repo
git checkout -b AEM	--->creates new branch
git push -f https://github.com/Harthik1/Lalith.git STOCK_images		--->for reverting back the push
git config --system core.longpaths true		--->for accepting long paths of file_name
git rm -r com.adsiter.adsiter		--->removes files from repo/staging area
***NOTE: You have to commit again whenever you try to delete and later push it to your remote repo